// generated from rosidl_adapter/resource/msg.idl.em
// with input from performance_test/src/msg/NavSatFix.msg
// generated code does not contain a copyright notice

#include "performance_test/msg/NavSatStatus.idl"
#include "std_msgs/msg/Header.idl"

module performance_test {
  module msg {
    typedef double double__9[9];
    module NavSatFix_Constants {
      const uint8 COVARIANCE_TYPE_UNKNOWN = 0;
      const uint8 COVARIANCE_TYPE_APPROXIMATED = 1;
      const uint8 COVARIANCE_TYPE_DIAGONAL_KNOWN = 2;
      const uint8 COVARIANCE_TYPE_KNOWN = 3;
    };
    @verbatim (language="comment", text=" Navigation Satellite fix for any Global Navigation Satellite System

 Specified using the WGS 84 reference ellipsoid")
    struct NavSatFix {
      @verbatim (language="comment", text=" header.stamp specifies the ROS time for this measurement (the
        corresponding satellite time may be reported using the
        sensor_msgs/TimeReference message).

 header.frame_id is the frame of reference reported by the satellite
        receiver, usually the location of the antenna.  This is a
        Euclidean frame relative to the vehicle, not a reference
        ellipsoid.")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=" Satellite fix status information.")
      performance_test::msg::NavSatStatus status;

      @verbatim (language="comment", text=" Latitude. Positive is north of equator; negative is south.")
      @unit (value="degrees")
      double latitude;

      @verbatim (language="comment", text=" Longitude. Positive is east of prime meridian; negative is west.")
      @unit (value="degrees")
      double longitude;

      @verbatim (language="comment", text=" Altitude. Positive is above the WGS 84 ellipsoid
 (quiet NaN if no altitude is available).")
      @unit (value="m")
      double altitude;

      @verbatim (language="comment", text=" Position covariance defined relative to a tangential plane
 through the reported position. The components are East, North, and
 Up (ENU), in row-major order.

 Beware: this coordinate system exhibits singularities at the poles.")
      @unit (value="m^2")
      double__9 position_covariance;

      uint8 position_covariance_type;

      @verbatim (language="comment", text=" Support data for the performance test")
      int64 time;

      uint64 id;
    };
  };
};
