// generated from rosidl_adapter/resource/msg.idl.em
// with input from performance_test/src/msg/PointCloud1m.msg
// generated code does not contain a copyright notice

#include "sensor_msgs/msg/PointField.idl"
#include "std_msgs/msg/Header.idl"

module performance_test {
  module msg {
    typedef sensor_msgs::msg::PointField sensor_msgs__msg__PointField;
    typedef sensor_msgs__msg__PointField sensor_msgs__msg__PointField__8[8];
    typedef uint8 uint8__1048576[1048576];
    @verbatim (language="comment", text=" This message holds a collection of N-dimensional points, which may
 contain additional information such as normals, intensity, etc. The
 point data is stored as a binary blob, its layout described by the
 contents of the \"fields\" array.")
    struct PointCloud1m {
      @verbatim (language="comment", text=" The point cloud data may be organized 2d (image-like) or 1d (unordered).
 Point clouds organized as 2d images may be produced by camera depth sensors
 such as stereo or time-of-flight.
 Time of sensor data acquisition, and the coordinate frame ID (for 3d points).")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=" 2D structure of the point cloud. If the cloud is unordered, height is
 1 and width is the length of the point cloud.")
      uint32 height;

      uint32 width;

      @verbatim (language="comment", text=" Describes the channels and their layout in the binary data blob.")
      sensor_msgs__msg__PointField__8 fields;

      @verbatim (language="comment", text=" Is this data bigendian?")
      boolean is_bigendian;

      @verbatim (language="comment", text=" Length of a point in bytes")
      uint32 point_step;

      @verbatim (language="comment", text=" Length of a row in bytes")
      uint32 row_step;

      @verbatim (language="comment", text=" Actual point data, size is (row_step*height)")
      uint8__1048576 data;

      @verbatim (language="comment", text=" True if there are no invalid points")
      boolean is_dense;

      @verbatim (language="comment", text=" Support data for the performance test")
      int64 time;

      uint64 id;
    };
  };
};
